version: "3.9"

services:
  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    # migra y levanta Django
    command: ["sh","-c","python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    depends_on:
      redis:
        condition: service_healthy

  worker:
    build:
      context: ./
      dockerfile: Dockerfile
    # Worker Celery (concurrency=1 si usas SQLite)
    command: ["celery","-A","pokeleague","worker","-l","info","--concurrency=1"]
    env_file:
      - .env
    volumes:
      - ./:/app
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy

  beat:
    build:
      context: ./
      dockerfile: Dockerfile
    command: ["celery","-A","pokeleague","beat","-l","info","-S","django_celery_beat.schedulers:DatabaseScheduler"]
    env_file:
      - .env
    volumes:
      - ./:/app
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
